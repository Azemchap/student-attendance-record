generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Classroom {
  id        String   @id @default(cuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  students    Student[]
  attendances Attendance[]

  @@map("classrooms")
}

model Student {
  id        String   @id @default(cuid())
  firstName String
  lastName  String
  studentId String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Foreign key to classroom
  classroomId String
  classroom   Classroom @relation(fields: [classroomId], references: [id], onDelete: Cascade)

  // Relations
  attendances Attendance[]

  @@map("students")
}

model Attendance {
  id        String           @id @default(cuid())
  date      DateTime         @db.Date
  status    AttendanceStatus
  createdAt DateTime         @default(now())
  updatedAt DateTime         @updatedAt

  // Foreign keys
  studentId String
  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)

  classroomId String
  classroom   Classroom @relation(fields: [classroomId], references: [id], onDelete: Cascade)

  // Ensure one attendance record per student per day
  @@unique([studentId, date])
  @@map("attendances")
}

enum AttendanceStatus {
  PRESENT
  ABSENT
  LATE
  EXCUSED
}
